name: Build and report an artifact
on:
  push:
    branches:
      - main
env:
  KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
  KOSLI_OWNER: fly-demo
  KOSLI_PIPELINE: fly-io-demo
  KOSLI_ENVIRONMENT: fly-staging
  IMAGE: ghcr.io/kosli-dev/fly-io-demo
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  build-and-report:
      name: Build and deploy docker image
      runs-on: ubuntu-latest

      steps:
        - name: Setup kosli
          uses: kosli-dev/setup-cli-action@v1
          with:
            version:
              0.1.23
        - uses: actions/checkout@v3
        - uses: superfly/flyctl-actions/setup-flyctl@master
        
        - name: Set up Docker Buildx (buildkit) runner
          uses: docker/setup-buildx-action@v2

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ secrets.GHCR_USER }}
            password: ${{ secrets.GHCR_TOKEN }}     

        - name: Build and push Docker image to GHCR
          id: docker_build
          uses: docker/build-push-action@v3
          with:
            context: .
            push: true
            tags: ${{ env.IMAGE }}:${{ github.sha }}

        - name: Declare pipeline
          run: kosli pipeline declare --description "fly.io demo image" 

        - name: Report artifact to Kosli
          run: |
            ARTIFACT_SHA=$( echo ${{ steps.docker_build.outputs.digest }} | sed 's/.*://')
            kosli pipeline artifact report creation ${{ env.IMAGE }}:${{ github.sha }} --sha256 $ARTIFACT_SHA

        - name: Reported expected deployment to Kosli
          run:  |
            ARTIFACT_SHA=$( echo ${{ steps.docker_build.outputs.digest }} | sed 's/.*://')
            kosli expect deployment ${{ env.IMAGE }}:${{ github.sha }} --sha256 $ARTIFACT_SHA

        - name: Deploy to fly.io
          run: flyctl deploy --image ${{ env.IMAGE }}:${{ github.sha }} --remote-only
            
        
